version: '3'

vars:
  IMG: makukha/multipython

tasks:

  init:
    desc: Initialize dev environment.
    cmds:
      - sh .dev/install-macports.sh

  checkupd:
    desc: Check for version updates.
    cmds:
      - docker buildx bake base
      - docker run --rm -t {{.IMG}}:base py checkupd

  news:
    desc: Show available news categories.
    cmds:
      - yq '.tool.towncrier.type[].name' -oj -r towncrier.toml

  news:*:
    desc: Create news item in category.
    vars:
      SECTION: '{{index .MATCH 0}}'
      ISSUE: {sh: git rev-parse --abbrev-ref HEAD | cut -d- -f1}
      MSG: {sh: "git rev-parse --abbrev-ref HEAD | sed 's/^[0-9][0-9]*-//' | uvx caseutil -csentence"}
    cmds:
      - uvx towncrier create -c '{{coalesce .CLI_ARGS .MSG}}' "{{.ISSUE}}.{{.SECTION}}.md"

  lint:
    desc: Run linters.
    cmds:
      - hadolint Dockerfile
      - shellcheck bin/**/*.sh tests/share/*.sh .dev/*.sh
      # docsubfile
      - uvx mypy docsubfile.py
      - uvx ruff check
      - uvx ruff format --check

  build:
    desc: Build all docker images.
    cmds:
      - docker buildx bake

  build:*:
    desc: Build specific target.
    vars:
      TARGET: "{{index .MATCH 0}}"
    cmds:
      - docker buildx bake {{.TARGET}}

  clean:
    desc: Prune local tags, images, and build cache.
    vars:
      TAGS:
        sh: docker image ls --format json | jq -r '. | select(.Repository == "{{.IMG}}") | .Tag'
    cmds:
      - cmd: docker image rm {{.IMG}}
        ignore_error: true
      - cmd: 'docker image rm {{.IMG}}:{{.ITEM}}'
        for: { var: TAGS }
        ignore_error: true
      - docker image prune
      - docker builder prune

  shell:*:
    desc: Shell to image.
    vars:
      TAG: "{{index .MATCH 0}}"
    cmds:
      - docker run --rm -it {{.CLI_ARGS}} -h {{.TAG}} -v ./tests/share:/tmp/share
          {{.IMG}}:{{.TAG}} /bin/bash

  run:*:
    desc: Run command in image {base,py*,latest} container.
    cmds:
      - docker run --rm -it {{.IMG}}:{{index .MATCH 0}} {{.CLI_ARGS}}

  test:
    desc: Run all tests.
    env:
      BUILDKIT_PROGRESS: plain
    cmds:
      - docker buildx bake --no-cache test

  test:*:
    desc: Test specific subset.
    vars:
      SUBSET: '{{index .MATCH 0}}'
    env:
      BUILDKIT_PROGRESS: plain
    cmds:
      - docker buildx bake --no-cache
          --set test_subset_{{.SUBSET}}.args.MULTIPYTHON_DEBUG=true
          test_subset_{{.SUBSET}}

  # docs

  docs:
    desc: Update docs.
    vars:
      VERSION: {sh: uvx bump-my-version show current_version 2>/dev/null}
    cmds:
      - docsub apply -i
          docs/part/basic-usage.md
          DOCKERHUB.md
          README.md

  #
  #  PRE-RELEASE
  # -------------
  #
  # > task checkupd
  # > task lint
  # > task clean build test
  # > task docs
  # > (make sure docs didn't change)
  #
  #  RELEASE
  # ---------
  #
  # > task release:version
  # > task release:changelog
  # > (proofread changelog)
  #
  # > task checkupd
  # > task lint
  # > task build test
  #
  # > task release:push
  # > task docs
  # > (make sure image digests changed)
  #
  # > (manually update https://hub.docker.com/repository/docker/makukha/multipython/general)
  #

  release:version:
    desc: Bump release version.
    cmds:
      - uvx bump-my-version bump --dry-run --verbose release
      - task: _bump

  _bump:
    internal: true
    prompt: Version will be updated as above. Continue?
    cmds:
      - uvx bump-my-version bump release

  release:changelog:
    desc: Collect changelog entries.
    vars:
      VERSION: {sh: uvx bump-my-version show current_version 2>/dev/null}
    cmds:
      - towncrier build --yes --version "{{.VERSION}}"
      - sed -e's/^### \(.*\)$/***\1***/; s/\([a-z]\)\*\*\*$/\1:***/' -i '' CHANGELOG.md

  release:push:
    desc: Push images to Docker Registry.
    prompt: Release all images. Continue?
    vars:
      TARGETS:
        sh: docker buildx bake --print 2>/dev/null | jq -r '.group.default.targets[]'
    cmds:
      - cmd: docker buildx bake --push {{.ITEM}} ; sleep 60
        for: { var: TARGETS }

  release:push:*:
    desc: Push specific Bake target to Docker Registry.
    cmds:
      - docker buildx bake --push {{index .MATCH 0}}
